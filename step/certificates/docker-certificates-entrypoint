#!/bin/sh
set -eo pipefail
export STEPPATH=/home/step/certificates
export CONFPATH=/home/step/certificates/config/ca.json
export PWDPATH=/home/step/certificates/password
ERR=0
function __init () {
    __required STEPCA_INIT_NAME STEPCA_INIT_DNS
    if [ "${ERR}" == "0" ]; then
        set -- \
        --name "${STEPCA_INIT_NAME}/ProxyMurder Local Smallstep CA" \
        --dns "${STEPCA_INIT_DNS}" \
        --provisioner "${STEPCA_INIT_PROVISIONER:-example@email.com}" \
        --password-file "${PWDPATH}" \
        --address ":${STEPCA_INIT_PORT:-5739}" \
        $( __ssh )
        __password
        step ca init "${@}"
    else
        >&2 printf "%s\n" "error initializing, run step ca init or provide STEPCA_INIT_ config parameters."
    fi
    
}
function __required () {
    for var in $@; do
        if [ -z $( eval echo \"\${$var}\" ) ]; then
            ERR=1
        fi
    done
}
function __ssh () {
    if [[ "${STEPCA_INIT_SSH}" == "true" || "${STEPCA_INIT_SSH}" == "1" ]]; then
        printf "%s" "--ssh"
    fi
}
function __password () {
    if [ -n "${STEPCA_INIT_PASSWORD}" ]; then
        printf "%s\n" "${STEPCA_INIT_PASSWORD}" > "${PWDPATH}"
    else
        __urandom > "${PWDPATH}"
    fi
    printf "%s" "Generating password... done!"
}
function __urandom () {
    set +o pipefail
    < /dev/urandom tr -dc A-Za-z0-9 | head -c40
    printf "%s\n"
    set -o pipefail
}
if [ ! -f "${CONFPATH}" ]; then
    __init
fi
exec "${@}"
